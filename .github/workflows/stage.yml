name: Stage PR for Master Release
on:
  push:
    branches: [ stage ]
jobs:
  PR:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Setup GIT
        run: |
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config user.name "$GITHUB_ACTOR"
      - name: Rebase branch
        run: |
          git remote add test "https://github.com/$GITHUB_REPOSITORY"
          git fetch test
          git checkout -b temp
          git reset --hard test/stage
          git rebase test/master
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Node.js packages
        run: yarn install
      - name: Set release PR confirmation
        if:  ${{ !contains(env.CONFIRM_COMMIT, 'true')  }}
        run: |
          RELEASE=$(node -pe "require('child_process').execSync('yarn release --dry-run').toString().split('---')[1].trim().split('\n').length >= 3")
          echo ::set-env name=CONFIRM_RELEASE::$RELEASE
      - name: Set release PR content
        if: ${{ contains( env.CONFIRM_RELEASE, 'true') }}
        run: |
          BODY=$(node -pe "require('child_process').execSync('yarn release --dry-run').toString().split('---')[1].replace(/%/g,'%25').replace(/\n/g,'%0A').trim()")
          TITLE=$(node -pe "require('child_process').execSync('yarn release --dry-run').toString().split('---')[1].trim().split('\n')[0].split(/\[|\]/g)[1]")
          echo "::set-env name=PR_TITLE::${TITLE:-Fallback}"
          echo "::set-env name=PR_BODY::$BODY"
      - name: Setup PR
        if: ${{ contains( env.CONFIRM_RELEASE, 'true') }}
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: Production increment ${{ env.PR_TITLE }}
          pr_body: "${{ env.PR_BODY }}"
          pr_draft: true
